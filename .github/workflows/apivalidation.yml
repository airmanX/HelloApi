name: "OpenAPI: generate & validate"

on:
  pull_request:
    branches: ["**"]
  push:
    branches: [main]

jobs:
  openapi:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      CONFIGURATION: Release
      PROJECT_PATH: HelloApi.csproj            # your API project
      SWAGGER_DOC: v1                          # must match c.SwaggerDoc("v1", ...)
      DESIGN_FILE: api-design.json             # your design doc in repo root
      SWAGGER_OUT: artifacts/swagger.json
      CHANGELOG_MD: artifacts/openapi-changelog.md

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET (8 & 9 to be safe)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x

      - name: Restore
        run: dotnet restore "${{ env.PROJECT_PATH }}"

      - name: Build
        run: dotnet build "${{ env.PROJECT_PATH }}" -c "${{ env.CONFIGURATION }}" --no-restore

      - name: Generate Swagger (no server) â€” local tool
        id: genswagger
        shell: bash
        run: |
         set -euo pipefail

         # 1) Create a local tool manifest for this repo and pin the CLI version
         dotnet new tool-manifest --force
         dotnet tool install Swashbuckle.AspNetCore.Cli --version 9.0.4

         # (Optional but useful) show installed tools
         dotnet tool list

         # 2) Resolve the built DLL path dynamically (no hardcoded TFM)
         TARGET_DLL=$(dotnet msbuild "${{ env.PROJECT_PATH }}" -nologo -getProperty:TargetPath)
         echo "Using DLL: $TARGET_DLL"

         mkdir -p "$(dirname "${{ env.SWAGGER_OUT }}")"

         # 3) Run the CLI via 'tool run'. Add roll-forward to avoid runtime mismatches.
         DOTNET_ROLL_FORWARD=LatestMajor \
         ASPNETCORE_ENVIRONMENT=CI \
         dotnet tool run swagger tofile \
         --output "${{ env.SWAGGER_OUT }}" \
         "$TARGET_DLL" \
         "${{ env.SWAGGER_DOC }}"

         BYTES=$(wc -c < "${{ env.SWAGGER_OUT }}")
         echo "bytes=$BYTES" >> "$GITHUB_OUTPUT"
         echo "Generated $BYTES bytes at ${{ env.SWAGGER_OUT }}"


      - name: Validate design syntax (swagger-cli)
        uses: mbowman100/swagger-validator-action@2.0
        with:
          files: '${{ env.DESIGN_FILE }}'

      - name: Lint design with Spectral (optional)
        continue-on-error: true
        uses: stoplightio/spectral-action@v0.8.13
        with:
          file_glob: '${{ env.DESIGN_FILE }}'

      - name: Breaking change check (oasdiff)
        uses: oasdiff/oasdiff-action/breaking@v0.0.21
        with:
          base: ${{ env.DESIGN_FILE }}
          revision: ${{ env.SWAGGER_OUT }}

      - name: Changelog (markdown)
        if: always()
        uses: oasdiff/oasdiff-action/changelog@v0.0.21
        with:
          base: ${{ env.DESIGN_FILE }}
          revision: ${{ env.SWAGGER_OUT }}
          output-to-file: ${{ env.CHANGELOG_MD }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: openapi-artifacts
          path: |
            ${{ env.SWAGGER_OUT }}
            ${{ env.CHANGELOG_MD }}
          if-no-files-found: warn

      - name: Post diff to Job Summary
        if: always()
        shell: bash
        run: |
          echo "## OpenAPI Diff" >> $GITHUB_STEP_SUMMARY
          if [ -f "${{ env.CHANGELOG_MD }}" ]; then
            cat "${{ env.CHANGELOG_MD }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "_No changelog generated._" >> $GITHUB_STEP_SUMMARY
          fi
